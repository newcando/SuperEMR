# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import jsonfield.fields
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='mdlbloodglucose',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('gluocose', models.FloatField(verbose_name='血糖')),
                ('measure_datetime', models.DateTimeField(verbose_name='测量时间')),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
            ],
            options={
                'verbose_name': '血糖',
                'ordering': ['-measure_datetime'],
                'verbose_name_plural': '血糖',
            },
        ),
        migrations.CreateModel(
            name='mdlbloodpressure',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('systolic_pressure', models.SmallIntegerField(verbose_name='收缩压', default=-1)),
                ('diastolic_pressure', models.SmallIntegerField(verbose_name='舒张压', default=-1)),
                ('heart_rate', models.SmallIntegerField(verbose_name='心律', default=-1)),
                ('measure_datetime', models.DateTimeField(verbose_name='测量时间')),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
            ],
            options={
                'verbose_name': '血压',
                'ordering': ['-measure_datetime'],
                'verbose_name_plural': '血压',
            },
        ),
        migrations.CreateModel(
            name='mdlbodyTemperature',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('temperature', models.FloatField(verbose_name='体温数据')),
                ('measure_datetime', models.DateTimeField(verbose_name='测量时间')),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
            ],
            options={
                'verbose_name': '体温',
                'ordering': ['-measure_datetime'],
                'verbose_name_plural': '体温',
            },
        ),
        migrations.CreateModel(
            name='mdlChatRecord',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('image', models.ImageField(blank=True, verbose_name='聊天图片', upload_to='MLImage/%Y/%m/%d', null=True)),
                ('character', models.CharField(blank=True, verbose_name='聊天文字', default='', max_length=1024)),
                ('video', models.FileField(blank=True, verbose_name='聊天视频', upload_to='MLFile/%Y/%m/%d', null=True)),
                ('audio', models.FileField(blank=True, verbose_name='聊天语音', upload_to='MLFile/%Y/%m/%d', null=True)),
                ('time', models.DateTimeField(verbose_name='聊天时间', auto_now_add=True)),
            ],
            options={
                'verbose_name': '聊天记录',
                'verbose_name_plural': '聊天记录',
            },
        ),
        migrations.CreateModel(
            name='mdlInstrument',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(verbose_name='设备名称', max_length=64)),
                ('instrumentType', models.CharField(blank=True, verbose_name='设备型号', default='', max_length=64)),
                ('instrumentSN', models.CharField(blank=True, verbose_name='设备机身号', default='', max_length=64)),
                ('manufacture', models.CharField(blank=True, verbose_name='生产商', default='', max_length=128)),
                ('seller', models.CharField(blank=True, verbose_name='销售商', default='', max_length=128)),
                ('price', models.PositiveIntegerField(blank=True, verbose_name='价格', default=0)),
                ('sellerPhoneNum', models.CharField(blank=True, verbose_name='销售商电话', default='', max_length=18)),
                ('servicePhoneNum', models.CharField(blank=True, verbose_name='服务商电话', default='', max_length=18)),
                ('buyDateTime', models.DateTimeField(blank=True, verbose_name='购买时间', default='1900-01-01')),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
            ],
            options={
                'verbose_name': '常用设备',
                'verbose_name_plural': '常用设备',
            },
        ),
        migrations.CreateModel(
            name='mdlMedicineLib',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(verbose_name='药品名称', max_length=254)),
                ('pharmaceutical_factory', models.CharField(blank=True, verbose_name='生产厂家', default='', max_length=128)),
                ('functionDescription', models.CharField(blank=True, verbose_name='功效描述', default='', max_length=254)),
                ('price', models.PositiveIntegerField(blank=True, verbose_name='价格', default=0)),
                ('seller', models.CharField(blank=True, verbose_name='销售商', default='', max_length=128)),
                ('sellerPhoneNum', models.CharField(blank='', verbose_name='销售商电话', max_length=18, null=True)),
                ('method', models.CharField(verbose_name='用法', max_length=10)),
                ('how_use', models.CharField(verbose_name='用量', max_length=10)),
                ('resultsEval', models.PositiveSmallIntegerField(blank=True, verbose_name='效果评价(1-10分)', default=-1)),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
                ('mark_image', models.ImageField(blank=True, verbose_name='药品外观图片', upload_to='MLImage/%Y/%m/%d', null=True)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
            ],
            options={
                'verbose_name': '药品库',
                'verbose_name_plural': '药品库',
            },
        ),
        migrations.CreateModel(
            name='mdlMedicineNoteCompletedRecord',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('medicine', jsonfield.fields.JSONField()),
                ('tm', models.DateTimeField(verbose_name='吃药时间')),
                ('noteEmail', models.EmailField(verbose_name='通知的邮箱', max_length=254, null=True)),
                ('emailNoteTime', models.DateTimeField(verbose_name='邮箱通知的时间', null=True)),
                ('notePhone', models.CharField(blank=True, verbose_name='手机号码', default='', max_length=18)),
                ('phoneNoteTime', models.DateTimeField(verbose_name='手机号通知的时间', null=True)),
            ],
            options={
                'verbose_name': '用药提醒完成记录',
                'verbose_name_plural': '用药提醒完成记录',
            },
        ),
        migrations.CreateModel(
            name='mdlMedicineNoteTask',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('medicine', jsonfield.fields.JSONField()),
                ('tm', models.DateTimeField(verbose_name='吃药时间')),
                ('noteBeforeMinutes', models.PositiveSmallIntegerField(verbose_name='提前多少分钟提醒', default=10, null=True)),
                ('noteByEmail', models.BooleanField(verbose_name='是否通过邮件提醒', default=True)),
                ('noteByMobileMsg', models.BooleanField(verbose_name='是否通过手机短信提醒', default=True)),
            ],
            options={
                'verbose_name': '用药提醒记录',
                'verbose_name_plural': '用药提醒记录',
            },
        ),
        migrations.CreateModel(
            name='mdlmyCardUseInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(verbose_name='项目名称', default='无', max_length=64)),
                ('number', models.PositiveIntegerField(verbose_name='数量')),
                ('whouse', models.CharField(verbose_name='领用人', default='无', max_length=256)),
                ('use_datetime', models.DateTimeField(verbose_name='领用时间', auto_now_add=True)),
                ('valid_time', models.DateTimeField(verbose_name='有效期', auto_now_add=True)),
                ('storage_conditions', models.CharField(verbose_name='储存条件', default='无', max_length=32)),
                ('batch_number', models.CharField(verbose_name='卡批号', default='无', max_length=256)),
                ('deviceid', models.CharField(verbose_name='机器ID', default='无', max_length=256)),
            ],
            options={
                'verbose_name': '卡领用记录信息',
                'ordering': ['-use_datetime'],
                'verbose_name_plural': '卡领用记录信息',
            },
        ),
        migrations.CreateModel(
            name='mdlmyDoctorList',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('doctorname', models.CharField(verbose_name='医生姓名', max_length=32)),
                ('department', models.CharField(blank=True, verbose_name='科室', max_length=32)),
                ('specialTech', models.CharField(blank=True, verbose_name='专长', max_length=256)),
                ('phoneNum', models.CharField(blank=True, verbose_name='联系电话', max_length=18)),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
            ],
            options={
                'verbose_name': '常用医生',
                'verbose_name_plural': '常用医生',
            },
        ),
        migrations.CreateModel(
            name='mdlmyFluorescenceData',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('testtime', models.DateTimeField(verbose_name='测试时间', auto_now_add=True)),
                ('test_reaction_time', models.PositiveIntegerField(verbose_name='测试超时时间')),
                ('temperature', models.FloatField(verbose_name='测试环境温度')),
                ('temperature2', models.FloatField(verbose_name='测试检测卡温度')),
                ('fluorescence_data', models.CharField(verbose_name='测试曲线', default='无', max_length=2000)),
                ('Cposition', models.PositiveIntegerField(verbose_name='C线位置', default='无')),
                ('Baseposition', models.PositiveIntegerField(verbose_name='基线线位置', default='无')),
                ('Tposition', models.PositiveIntegerField(verbose_name='T线位置', default='无')),
                ('resultratio', models.FloatField(verbose_name='测试峰高比', default='无')),
                ('resultprimitive', models.FloatField(verbose_name='测试原始结果', default='无')),
                ('resultcalibration', models.FloatField(verbose_name='测试校准结果', default='无')),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
                ('testSampleID', models.CharField(verbose_name='测试样品ID', default='无', max_length=20)),
                ('DeviceID', models.CharField(verbose_name='设备ID', default='无', max_length=20)),
                ('testCardID', models.CharField(verbose_name='测试卡ID', default='无', max_length=20)),
            ],
            options={
                'verbose_name': '荧光仪器测试数据',
                'ordering': ['-upload_datetime'],
                'verbose_name_plural': '荧光仪器测试数据',
            },
        ),
        migrations.CreateModel(
            name='mdlmyFluorescenceInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('id1', models.CharField(verbose_name='设备ID', default='无', max_length=16)),
                ('name', models.CharField(verbose_name='设备名称', default='无', max_length=32)),
                ('manufacture', models.CharField(verbose_name='设备制造商', default='无', max_length=32, null=True)),
                ('tel', models.CharField(verbose_name='设备制造商电话', default='无', max_length=32, null=True)),
                ('status', models.CharField(verbose_name='在线状态', default='无', max_length=32, null=True)),
                ('statustime', models.DateTimeField(auto_now=True, verbose_name='状态提交时间', null=True)),
                ('address', models.CharField(verbose_name='设备使用地址', default='无', max_length=16)),
                ('needmainten', models.CharField(verbose_name='是否需要维修', default='无', max_length=32)),
            ],
            options={
                'verbose_name': '荧光设备信息',
                'verbose_name_plural': '荧光设备信息',
            },
        ),
        migrations.CreateModel(
            name='mdlmyFluorescenceTester',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(verbose_name='姓名', default='无', max_length=16)),
                ('sex', models.CharField(verbose_name='性别', default='无', max_length=8)),
                ('age', models.SmallIntegerField(verbose_name='年龄')),
                ('deviceID', models.CharField(verbose_name='设备ID', default='无', max_length=500)),
                ('contact_information', models.CharField(verbose_name='电话', default='无', max_length=128)),
                ('position', models.CharField(verbose_name='职务', default='无', max_length=64)),
                ('demo', models.CharField(verbose_name='备注', default='无', max_length=64)),
                ('tester', models.ForeignKey(to='emr.mdlmyFluorescenceInfo')),
            ],
            options={
                'verbose_name': '测试人员信息',
                'verbose_name_plural': '测试人员信息',
            },
        ),
        migrations.CreateModel(
            name='mdlmyMedicalOrgnization',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(verbose_name='医院名称', max_length=256)),
                ('addressline1', models.CharField(blank=True, verbose_name='地址行1', default='', max_length=128)),
                ('addressline2', models.CharField(blank=True, verbose_name='地址行2', default='', max_length=128)),
                ('city', models.CharField(blank=True, verbose_name='县市', default='', max_length=32)),
                ('state', models.CharField(blank=True, verbose_name='省', default='', max_length=32)),
                ('zipcode', models.IntegerField(blank=True, verbose_name='邮编')),
                ('phoneNum1', models.CharField(blank=True, verbose_name='服务电话1', default='', max_length=18)),
                ('phoneNum2', models.CharField(blank=True, verbose_name='服务电话2', default='', max_length=18)),
                ('phoneNum3', models.CharField(blank=True, verbose_name='服务电话3', default='', max_length=18)),
                ('demoInfo', models.CharField(blank=True, verbose_name='其它信息', default='', max_length=128)),
            ],
            options={
                'verbose_name': '我的常用医疗机构表',
                'verbose_name_plural': '我的常用医疗机构表',
            },
        ),
        migrations.CreateModel(
            name='mdlmyMedicalRecords',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('title', models.CharField(verbose_name='标题', default='无标题', max_length=64)),
                ('recordType', models.SmallIntegerField(choices=[(1, '门诊病历'), (2, '住院病历'), (3, '检查数据'), (4, '自我描叙')], default='4', verbose_name='病历类型')),
                ('hospital', models.CharField(verbose_name='检查医院', default='', max_length=64)),
                ('doctor', models.CharField(verbose_name='医生', default='', max_length=64)),
                ('RecordOccurTime', models.DateTimeField(verbose_name='病历产生时间', auto_now_add=True)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
                ('symptomDescription', models.CharField(verbose_name='症状文字描述', default='', max_length=1024)),
                ('diagnosis', models.CharField(verbose_name='诊断结论文字描述', default='', max_length=1024)),
                ('voiceDescription0', models.FileField(blank=True, verbose_name='语音描述症状0', upload_to='MRVoice/%Y/%m/%d', null=True)),
                ('voiceDescription1', models.FileField(blank=True, verbose_name='语音描述症状1', upload_to='MRVoice/%Y/%m/%d', null=True)),
                ('voiceDescription2', models.FileField(blank=True, verbose_name='语音描述症状2', upload_to='MRVoice/%Y/%m/%d', null=True)),
                ('voiceDescription3', models.FileField(blank=True, verbose_name='语音描述症状3', upload_to='MRVoice/%Y/%m/%d', null=True)),
                ('voiceDescription4', models.FileField(blank=True, verbose_name='语音描述症状4', upload_to='MRVoice/%Y/%m/%d', null=True)),
                ('imageRecord0', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord1', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord2', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord3', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord4', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord5', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord6', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
                ('imageRecord7', models.FileField(blank=True, verbose_name='图像记录', upload_to='MRImage/%Y/%m/%d', null=True)),
            ],
            options={
                'verbose_name': '病历记录',
                'ordering': ['-upload_datetime'],
                'verbose_name_plural': '病历记录',
            },
        ),
        migrations.CreateModel(
            name='mdlmyMedicineEatRecord',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('method', models.CharField(verbose_name='用法', max_length=10)),
                ('how_use', models.CharField(verbose_name='用量', max_length=10)),
                ('eatTime', models.DateTimeField(verbose_name='吃药时间')),
                ('resultDescription', models.CharField(verbose_name='效果记录', default='', max_length=256)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
                ('medicine', models.ForeignKey(to='emr.mdlMedicineLib')),
            ],
            options={
                'verbose_name': '吃药记录',
                'verbose_name_plural': '吃药记录',
            },
        ),
        migrations.CreateModel(
            name='mdlmyReport',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('state', models.CharField(verbose_name='报告状态', default='无', max_length=64)),
                ('result', models.CharField(verbose_name='报告结果', default='无', max_length=256)),
                ('upload_datetime', models.DateTimeField(verbose_name='上传时间', auto_now_add=True)),
                ('deviceInfo', models.ForeignKey(to='emr.mdlmyFluorescenceInfo')),
            ],
            options={
                'verbose_name': '报告记录',
                'ordering': ['-upload_datetime'],
                'verbose_name_plural': '报告记录',
            },
        ),
        migrations.CreateModel(
            name='mdlmyStorageTable',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(verbose_name='项目名称', default='无', max_length=64)),
                ('number', models.PositiveIntegerField(verbose_name='数量')),
                ('deviceid', models.CharField(verbose_name='机器ID', default='无', max_length=256)),
            ],
            options={
                'verbose_name': '库存表',
                'verbose_name_plural': '库存表',
            },
        ),
        migrations.CreateModel(
            name='mdlmyTestCard',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('id1', models.CharField(verbose_name='检测卡编号', default='无', max_length=16)),
                ('units', models.CharField(verbose_name='检测卡项目', default='无', max_length=32)),
                ('normal_value', models.FloatField(verbose_name='正常值', null=True)),
                ('lowest_value', models.FloatField(verbose_name='最低检测线', null=True)),
                ('highest_value', models.FloatField(verbose_name='最高检测线', null=True)),
                ('result_unit', models.CharField(verbose_name='测试结果单位', default='无', max_length=16, null=True)),
                ('T', models.IntegerField(verbose_name='T线位置', null=True)),
                ('StandardCurveNumber', models.IntegerField(verbose_name='标准曲线数目', null=True)),
                ('a1', models.FloatField(verbose_name='曲线1-a', null=True)),
                ('b1', models.FloatField(verbose_name='曲线1-b', null=True)),
                ('c1', models.FloatField(verbose_name='曲线1-c', null=True)),
                ('a2', models.FloatField(verbose_name='曲线2-a', null=True)),
                ('b2', models.FloatField(verbose_name='曲线2-b', null=True)),
                ('c2', models.FloatField(verbose_name='曲线2-c', null=True)),
                ('C', models.IntegerField(verbose_name='C线位置', null=True)),
                ('reaction_time', models.IntegerField(verbose_name='试剂反应时间', null=True)),
                ('made_time', models.DateTimeField(verbose_name='生产日期', null=True)),
                ('valid_time', models.DateTimeField(verbose_name='过期时间')),
            ],
            options={
                'verbose_name': '检测卡信息',
                'verbose_name_plural': '检测卡信息',
            },
        ),
        migrations.CreateModel(
            name='mdlmyTestPeopleInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('id1', models.CharField(verbose_name='样品', default='无', max_length=16)),
                ('name', models.CharField(verbose_name='姓名', default='无', max_length=16)),
                ('sex', models.CharField(verbose_name='性别', default='无', max_length=8)),
                ('age', models.SmallIntegerField(verbose_name='年龄')),
                ('remark', models.CharField(verbose_name='备注', default='无', max_length=32)),
                ('departments', models.CharField(verbose_name='科室', default='无', max_length=32)),
            ],
            options={
                'verbose_name': '样品信息',
                'verbose_name_plural': '样品信息',
            },
        ),
        migrations.CreateModel(
            name='mdlUserExtInfo',
            fields=[
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL, primary_key=True, serialize=False)),
                ('email_activation_key', models.CharField(verbose_name='邮箱验证码', max_length=40)),
                ('uniqEmail', models.EmailField(blank=True, verbose_name='唯一的email', max_length=64, unique=True)),
                ('is_uniqEmailActivated', models.BooleanField(verbose_name='邮箱是否激活过', default=False)),
                ('uniqMobilePhone', models.CharField(blank=True, verbose_name='手机号码', default='', max_length=18, unique=True)),
                ('is_uniqMobilePhoneActivated', models.BooleanField(verbose_name='手机是否激活过', default=False)),
                ('sex', models.SmallIntegerField(blank=True, choices=[(2, '不告诉你'), (1, '男'), (0, '女')], default=2, verbose_name='性别')),
                ('educationbackground', models.SmallIntegerField(choices=[(1, '博士'), (2, '硕士'), (3, '本科'), (4, '高中'), (5, '初中'), (6, '小学'), (0, '其它')], default='0', verbose_name='学历')),
                ('datebirth', models.DateField(blank=True, verbose_name='出生年月', default='1900-01-01')),
                ('nickname', models.CharField(verbose_name='用户昵称', max_length=32, unique=True)),
                ('addressline1', models.CharField(blank=True, verbose_name='地址行1', default='', max_length=128)),
                ('addressline2', models.CharField(blank=True, verbose_name='地址行2', default='', max_length=128)),
                ('state', models.CharField(blank=True, verbose_name='省', default='00', max_length=32)),
                ('city', models.CharField(blank=True, verbose_name='县市', default='00', max_length=32)),
                ('district', models.CharField(blank=True, verbose_name='区', default='00', max_length=32)),
                ('zipcode', models.IntegerField(blank=True, verbose_name='邮编', null=True)),
                ('is_locked', models.BooleanField(verbose_name='账号是否被锁定', default=False)),
                ('demo', models.TextField(verbose_name='备注信息', max_length=51200)),
                ('user_type', models.CharField(blank=True, verbose_name='用户类型', default=False, max_length=4, null=True)),
                ('user_image', models.ImageField(blank=True, verbose_name='头像', upload_to='MLImage/%Y/%m/%d', null=True)),
                ('name', models.CharField(blank=True, verbose_name='姓名', max_length=32)),
                ('home', models.ImageField(blank=True, verbose_name='我的封面', upload_to='MLImage/%Y/%m/%d', null=True)),
                ('height', models.SmallIntegerField(blank=True, verbose_name='身高', default='0')),
                ('weight', models.SmallIntegerField(blank=True, verbose_name='体重', default='0')),
                ('blood_type', models.CharField(blank=True, verbose_name='血型', max_length=4)),
                ('subject', models.CharField(blank=True, verbose_name='专业', max_length=64)),
                ('company', models.CharField(blank=True, verbose_name='工作单位', max_length=64)),
                ('jobNumber', models.CharField(blank=True, verbose_name='工号', max_length=64)),
                ('achivement', models.CharField(blank=True, verbose_name='学术成就', max_length=64)),
                ('personID', models.CharField(blank=True, verbose_name='身份证', max_length=64)),
                ('Vocational_qualification_certificate', models.CharField(blank=True, verbose_name='职业资格证号', max_length=64)),
                ('VQCID', models.CharField(blank=True, verbose_name='职业资格证号号', max_length=64)),
                ('publicGender', models.CharField(blank=True, verbose_name='是否公开性别', max_length=1)),
                ('publicHome', models.CharField(blank=True, verbose_name='是否开放空间', max_length=1)),
                ('QR', models.ImageField(blank=True, verbose_name='用户二维码', upload_to='MLImage/%Y/%m/%d', null=True)),
                ('roamingtime', models.DateTimeField(verbose_name='漫游时间设置', auto_now_add=True)),
                ('relative_user', models.ManyToManyField(to='emr.mdlUserExtInfo', default=False, blank=True, verbose_name='关联用户', related_name='relative_user_rel_+', null=True)),
            ],
            options={
                'verbose_name': '个人信息',
                'verbose_name_plural': '个人信息',
            },
        ),
        migrations.AddField(
            model_name='mdlmyreport',
            name='sample',
            field=models.OneToOneField(to='emr.mdlmyTestPeopleInfo'),
        ),
        migrations.AddField(
            model_name='mdlmyreport',
            name='test_card',
            field=models.OneToOneField(to='emr.mdlmyTestCard'),
        ),
        migrations.AddField(
            model_name='mdlmyreport',
            name='test_data',
            field=models.OneToOneField(to='emr.mdlmyFluorescenceData'),
        ),
        migrations.AddField(
            model_name='mdlmyreport',
            name='tester',
            field=models.ForeignKey(to='emr.mdlmyFluorescenceTester'),
        ),
        migrations.AddField(
            model_name='mdlmyreport',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmymedicineeatrecord',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmymedicalrecords',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmymedicalorgnization',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmydoctorlist',
            name='orgnization',
            field=models.ForeignKey(to='emr.mdlmyMedicalOrgnization'),
        ),
        migrations.AddField(
            model_name='mdlmydoctorlist',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmedicinenotetask',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmedicinenotecompletedrecord',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlmedicinelib',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlinstrument',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlchatrecord',
            name='user1',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlbodytemperature',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlbloodpressure',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
        migrations.AddField(
            model_name='mdlbloodglucose',
            name='user',
            field=models.ForeignKey(to='emr.mdlUserExtInfo'),
        ),
    ]
